{"version":3,"sources":["components/Common/Pagination/Pagination.module.css","components/Users/UserCard/UserCard.module.css","components/Common/Pagination/paginationHelpers.ts","components/Common/Pagination/Paginaton.tsx","components/Users/UserCard/UserCard.tsx","components/Users/SearchUsers/SearchUsers.tsx","components/Users/Users.tsx"],"names":["module","exports","getButtonClassNameHelper","m","currentPage","s","pageNumber","currentPageNumber","Pagination","React","memo","totalPagesCount","useSelector","selectTotalPagesCount","selectCurrentPage","dispatch","useDispatch","useState","inputValue","setInputValue","setCurrentPage","setCurrentPageAC","onClickHandler","e","preventDefault","currentTarget","id","paginationButtons","rangeBack","rangeForward","res","i","name","toString","length","getPrepArray","map","href","className","onClick","pagination","slider","onSubmit","form","value","onChange","refineValue","type","UserCard","photos","status","followed","buttonTitle","userImg","small","large","isBtnDisabled","setBtnDisabled","navigate","useNavigate","useEffect","userCard","leftPart","to","src","alt","disabled","unFollow","follow","rightPart","SearchUsers","term","useAppSelector","selectUsersSearchTerm","touched","setTouched","window","setTimeout","getUsers","clearTimeout","setSearchParams","placeholder","Users","items","selectItems","page","pathname","useLocation","friend","undefined","setUsersAC","users","useMemo","Preloader"],"mappings":"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","file":"static/js/4.202ab314.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__2Fuks\",\"slider\":\"Pagination_slider__2cFTK\",\"pageNumber\":\"Pagination_pageNumber__21Eo1\",\"currentPageNumber\":\"Pagination_currentPageNumber__hHrXk\",\"form\":\"Pagination_form__1f6z1\",\"error\":\"Pagination_error__gZEJX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userCard\":\"UserCard_userCard__3ynex\",\"leftPart\":\"UserCard_leftPart__3N1L6\",\"rightPart\":\"UserCard_rightPart__3oltd\",\"name\":\"UserCard_name__1H9K5\",\"status\":\"UserCard_status__1vqrh\"};","import s from './Pagination.module.css'\r\n\r\n\r\nexport type PageType = { name: string, id: number }\r\n\r\nexport const getButtonClassNameHelper = (m: number, currentPage: number) => `${ s.pageNumber } ${ m === currentPage ? s.currentPageNumber : '' }`\r\n\r\nexport const getPrepArray = (totalPagesCount: number,\r\n                             currentPage: number,\r\n                             rangeBack: number,\r\n                             rangeForward: number): PageType[] => {\r\n    let res: PageType[] = []\r\n    for (let i = currentPage - rangeBack; i <= currentPage + rangeForward; i++) {\r\n        if (i >= 1 && i <= totalPagesCount) {\r\n            res = [...res, { name: i.toString(), id: i }]\r\n        }\r\n    }\r\n\r\n    res[0]\r\n    && +res[0].id > 1\r\n    && ( res = [{ name: 'First Page', id: 1 }, ...res] )\r\n\r\n    res[0]\r\n    && +res[res.length - 1].id < totalPagesCount\r\n    && ( res = [...res, { name: 'Last Page', id: totalPagesCount }] )\r\n\r\n    return res\r\n}\r\n","import React, { ChangeEventHandler, Dispatch, FormEventHandler, MouseEventHandler, useState } from \"react\"\r\nimport s from './Pagination.module.css'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { AppStateType } from \"../../../redux/redux-store\"\r\nimport { setCurrentPageAC, usersActionTypes } from \"../../../redux/usersReducer\"\r\nimport { selectCurrentPage, selectTotalPagesCount } from '../../../redux/selectors'\r\nimport { getButtonClassNameHelper, getPrepArray } from './paginationHelpers'\r\n\r\n\r\n\r\n\r\nexport const Pagination = React.memo( () => {\r\n\r\n    const totalPagesCount = useSelector<AppStateType, number>( selectTotalPagesCount )\r\n    const currentPage = useSelector<AppStateType, number>( selectCurrentPage )\r\n    const dispatch = useDispatch<Dispatch<usersActionTypes>>()\r\n\r\n    const [inputValue, setInputValue] = useState<number>( currentPage )\r\n\r\n    const setCurrentPage = (pageNumber: number) => {\r\n        dispatch( setCurrentPageAC( pageNumber ) )\r\n    }\r\n\r\n    const onClickHandler: MouseEventHandler<HTMLAnchorElement> = (e) => {\r\n        e.preventDefault()\r\n        const pageNumber = +e.currentTarget.id\r\n        setCurrentPage( pageNumber )\r\n        setInputValue( pageNumber )\r\n    }\r\n\r\n    const onInputChange: ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        const refineValue = (value: number): number => {\r\n            if (value < 1) return 1\r\n            if (value > totalPagesCount) return totalPagesCount\r\n            return value\r\n        }\r\n        const value = +e.currentTarget.value\r\n        setInputValue( refineValue( value ) )\r\n    }\r\n\r\n    const onSubmitForm: FormEventHandler<HTMLFormElement> = (e) => {\r\n        e.preventDefault()\r\n        setCurrentPage( inputValue )\r\n    }\r\n\r\n    const paginationButtons = getPrepArray( totalPagesCount, currentPage, 2, 5 )\r\n        .map( m => (\r\n            <a href={ m.name } key={ m.id } id={ m.id.toString() }\r\n               className={ getButtonClassNameHelper( m.id, currentPage ) }\r\n               onClick={ onClickHandler }\r\n            >\r\n                { m.name }\r\n            </a>\r\n        ) )\r\n\r\n    // console.log('pagination')\r\n    return (\r\n        <div className={ s.pagination }>\r\n            <div className={ s.slider }>\r\n                { paginationButtons }\r\n            </div>\r\n            <form onSubmit={ onSubmitForm } className={ s.form }>\r\n                <input value={ inputValue } onChange={ onInputChange } type=\"number\"/>\r\n                <button>Go</button>\r\n            </form>\r\n        </div>\r\n    )\r\n} )\r\n","import {follow, unFollow, UserType} from \"../../../redux/usersReducer\"\r\nimport s from './UserCard.module.css'\r\nimport React, {useEffect, useState} from \"react\"\r\nimport {Link, useNavigate} from \"react-router-dom\"\r\nimport {useDispatch} from 'react-redux'\r\n\r\n\r\ntype UserPropsType = UserType & {}\r\nconst userDefaultImg = \"https://e7.pngegg.com/pngimages/931/209/png-clipart-computer-icons-symbol-avatar-logo-person-with-helmut-miscellaneous-black.png\"\r\n\r\nexport const UserCard = React.memo(({\r\n                                        id,\r\n                                        name,\r\n                                        photos,\r\n                                        status,\r\n                                        followed,\r\n                                    }: UserPropsType) => {\r\n\r\n    const buttonTitle = followed ? 'UnFollow' : 'Follow'\r\n    const userImg = photos.small ? photos.small : photos.large ? photos.large : userDefaultImg\r\n    const [isBtnDisabled, setBtnDisabled] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const toggleFollowHandle = () => {\r\n        setBtnDisabled(true)\r\n        dispatch(followed ? unFollow(id) : follow(id))\r\n    }\r\n\r\n    const sendMessageHandle = () => {\r\n        navigate(`/dialogs/${id}`)\r\n    }\r\n    useEffect(() => {\r\n        setBtnDisabled(false)\r\n    }, [followed])\r\n\r\n    // console.log( 'userCard  ', id )\r\n\r\n    return (\r\n        <div className={s.userCard}>\r\n            <div className={s.leftPart}>\r\n                <Link to={'/profile/' + id}>\r\n                    <img\r\n                        src={userImg}\r\n                        alt=\"\"/>\r\n                </Link>\r\n                <div>\r\n                    <button disabled={isBtnDisabled} onClick={toggleFollowHandle}>{buttonTitle}</button>\r\n                    <button disabled={isBtnDisabled} onClick={sendMessageHandle}>Send Message</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.rightPart}>\r\n                <div className={'name'}>{name}</div>\r\n                <div className={s.status}>status: {status}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, { ChangeEventHandler, useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { getUsers, setSearchParams } from '../../../redux/usersReducer'\r\nimport { useAppSelector } from '../../../redux/redux-store'\r\nimport { selectUsersSearchTerm } from '../../../redux/selectors'\r\n\r\n\r\nexport const SearchUsers = () => {\r\n    const term = useAppSelector( selectUsersSearchTerm )\r\n    const [touched, setTouched] = useState( false )\r\n    const dispatch = useDispatch()\r\n\r\n    const inputChangeHandler: ChangeEventHandler<HTMLInputElement> = e => {\r\n        dispatch( setSearchParams( { term: e.currentTarget.value, currentPage: 1 } ) )\r\n        if (!touched) {\r\n            setTouched( true )\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        let id: number\r\n        if (touched) {\r\n            id = window.setTimeout( () => {\r\n                dispatch( getUsers() )\r\n            }, 800 )\r\n        }\r\n        return () => {\r\n            id && clearTimeout( id )\r\n        }\r\n    }, [term, touched, dispatch] )\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" value={ term } onChange={ inputChangeHandler } placeholder='Search user'/>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useMemo } from \"react\"\r\nimport { getUsers, setSearchParams, setUsersAC } from \"../../redux/usersReducer\"\r\nimport { Preloader } from \"../Common/Preloader/Preloader\"\r\nimport { Pagination } from \"../Common/Pagination/Paginaton\"\r\nimport { UserCard } from './UserCard/UserCard'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useAppSelector } from '../../redux/redux-store'\r\nimport { selectCurrentPage, selectItems } from '../../redux/selectors'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { SearchUsers } from './SearchUsers/SearchUsers'\r\n\r\n\r\nconst Users = () => {\r\n    // console.log( 'users' )\r\n    const items = useAppSelector( selectItems )\r\n    const page = useAppSelector( selectCurrentPage )\r\n    const dispatch = useDispatch()\r\n    const { pathname } = useLocation()\r\n\r\n    useEffect( () => {\r\n        const friend = ( pathname === '/friends' || undefined )\r\n        dispatch( setSearchParams( { friend } ) )\r\n\r\n        return () => {\r\n            dispatch( setUsersAC( [] ) )\r\n            dispatch( setSearchParams( { friend: undefined, currentPage: 1, term: '' } ) )\r\n        }\r\n    }, [pathname, dispatch] )\r\n\r\n    useEffect( () => {\r\n        dispatch( getUsers() )\r\n    }, [page, pathname, dispatch] )\r\n\r\n    const users = useMemo( () => {\r\n        // console.log( 'mapping' )\r\n        return items.map( m => <UserCard key={ m.id }\r\n                                         id={ m.id }\r\n                                         name={ m.name }\r\n                                         photos={ m.photos }\r\n                                         status={ m.status }\r\n                                         followed={ m.followed }\r\n        /> )\r\n    }, [items] )\r\n\r\n    return (\r\n        <>\r\n            <SearchUsers/>\r\n            {\r\n                !items.length\r\n                    ? <Preloader/>\r\n                    : <div>\r\n                        <div>\r\n                            { users }\r\n                        </div>\r\n                        <Pagination/>\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Users"],"sourceRoot":""}